<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mydatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.zerock.mapper.CustomOrderMapper">

	<resultMap type="org.zerock.domain.ShopGoodsVO" id="goodsMap">
	
		<result property="gno"  column="GNO"/>
		<result property="gname"  column="GNAME"/>
		<result property="price"  column="PRICE"/>
		<result property="information"  column="INFORMATION"/>
		<result property="title_img"  column="TITLE_IMG"/>
		<result property="info_img"  column="INFO_IMG"/>
		<result property="upload_date"  column="UPLOAD_DATE"/>
		<result property="update_date"  column="UPDATE_DATE"/>
		<result property="max_size"  column="MAX_SIZE"/>
		<result property="custom"  column="CUSTOM"/>
	</resultMap>

	<resultMap type="org.zerock.domain.ShoppingCartVO" id="cartMap">
	
		<id property="member_seq"  column="MEMBER_SEQ"  />
		<result property="cart_no"   column="CART_NO"  />
		<result property="member_seq"   column="MEMBER_SEQ"  />
		<result property="gno"   column="GNO"  />
		<result property="enroll_date"   column="ENROLL_DATE"  />
		<result property="image"   column="IMAGE"  />
		<result property="quantity"   column="QUANTITY"  />
		<result property="model"   column="MODEL"  />
		
	</resultMap>

	<resultMap type="org.zerock.domain.OrderDTO" id="myOrderMap">
		<id  property="orderno" column="orderno"  />
		<result property="orderno" column="orderno"/>
		<result property="userid" column="userid"/>
		<result property="username" column="username"/>
		<result property="email" column="email"/>
		<result property="phone" column="phone"/>
		<result property="totalprice" column="totalprice"/>
		<result property="payment" column="payment"/>
		<result property="order_request" column="order_request"/>
		<result property="delivery_request" column="delivery_request"/>
		<result property="delivery_request" column="delivery_request"/>
		<result property="orderpw" column="orderpw"/>
		<result property="order_date" column="order_date"/>
		
		<result property="gno" column="gno"/>
		<result property="model_name" column="model_name"/>
		<result property="caseimgurl" column="caseimgurl"/>
		<result property="quantity" column="quantity"/>
		<result property="casename" column="casename"/>
		
		
	</resultMap>



	<!--커스텀용 주문넣기  -->
	<insert id="insertOrder_cus" >
	
		insert into Order_custom_goods(orderno, gno , userid , email,phone,model_name,casename,price,custom_image,custom_content,quantity,totalprice,payment,order_request,delivery_request,delivery_address,caseimgurl,username,order_date)
			 values(#{orderno},#{gno},#{userid},#{email},#{phone},#{model_name},#{casename},#{price},#{custom_image} ,#{custom_content},#{quantity},#{totalprice},#{payment},#{order_request},#{delivery_request},#{delivery_address},#{caseimgurl},#{username},sysdate)
	
	</insert>
	<!-- 커스텀용 주문넣기 비회원용  -->
	<insert id="insertOrderNomember_cus">

		insert into Order_custom_goods(orderno, gno , userid , email,phone,model_name,casename,price,custom_image,custom_content,quantity,totalprice,payment,order_request,delivery_request,delivery_address, orderpw,caseimgurl,username,order_date )
			 values(#{orderno},#{gno},#{userid},#{email},#{phone},#{model_name},#{casename},#{price},#{custom_image},#{custom_content},#{quantity},#{totalprice},#{payment},#{order_request},#{delivery_request},#{delivery_address},#{orderpw},#{caseimgurl},#{username},sysdate)
	
	</insert>

	<!--주문번호 받아오기  -->
	<select id="seletOrderNo" resultType="int">
		
		select ORDER_SEQ.nextval from dual
	
	</select>


	<!--일반상품 주문넣기  -->
	<insert id="insertOrder">
	
		insert into Order_custom_goods(orderno, userid , email,phone,totalprice,payment,order_request,delivery_request,delivery_address,username,order_date)
			 values(#{orderno},#{userid},#{email},#{phone},#{totalprice},#{payment},#{order_request},#{delivery_request},#{delivery_address},#{username},sysdate)
	</insert>
	
	<!--일반상품 주문넣기(비회원)  -->
	<insert id="insertOrderNomember">
		insert into Order_custom_goods(orderno, userid , email,phone,totalprice,payment,order_request,delivery_request,delivery_address,username,order_date,orderpw)
			 values(#{orderno},#{userid},#{email},#{phone},#{totalprice},#{payment},#{order_request},#{delivery_request},#{delivery_address},#{username},sysdate,#{orderpw})
	</insert>

	<!-- 주문 상품넣기 -->
	<insert id="insertOrderd_goods">
	
		insert into ordered_goods(orderno,gno,model_name,caseimgurl,quantity) values(#{orderno},#{vo.gno},#{vo.model},#{vo.image},#{vo.quantity})
	
	</insert>


	<!-- 상품번호로 상품정보 가져오기 -->
	<select id="selectGoods" resultMap="goodsMap">
	
		select * from Shop_goods where gno = #{gno}

	</select>
	
	<!-- 쇼핑카트 카운트  -->
	<select id="selectShoppingCartCount" resultType="int">
	
		select count(*) elements from shopping_cart where member_seq = #{member_seq}
	
	</select>
	
	<insert id="insertShoppingCart" >
	
		insert into shopping_cart(cart_no,gno,member_seq,enroll_date,image ,model,quantity) values(to_char(shopping_seq.nextval),#{vo.gno},#{vo.member_seq},sysdate,#{vo.image},#{vo.model},#{vo.quantity})
	
	</insert>
	
	<select id="selectCartList" resultMap="cartMap">
	
		select cart.* ,goods.price,goods.gname from shopping_cart cart, Shop_goods goods where cart.member_seq = #{member_seq} and cart.gno = goods.gno

	</select>
	
	<delete id="deleteCartElement">
	
		delete from shopping_cart where member_seq = #{member_seq} and cart_no = #{cart_no}
	
	</delete>
	
	<!--주문목록 가져오기  -->
	<select id="selectMyOrderList" resultMap="myOrderMap">
	
	 select orders.orderno , orders.username,orders.userid,orders.email,orders.phone,orders.totalprice,
		orders.payment,orders.order_request,orders.delivery_request,orders.delivery_address,orders.order_date, shop_goods.gname casename,
			goods.gno,goods.model_name,goods.caseimgurl,goods.quantity from Order_custom_goods orders , ordered_goods goods , shop_goods where orders.ORDERNO = goods.ORDERNO and TRUNC(orders.order_date) between TRUNC(to_date(#{start_date},'YYYY-MM-DD')) and TRUNC(to_date(#{end_date},'YYYY-MM-DD')) and orders.userid=#{userid} and shop_goods.gno=goods.gno  
	</select>
	
	<select id="selectMyCustomOrderList" resultType="org.zerock.domain.CustomOrderDTO">
	
		select * from Order_custom_goods where userid=#{userid} and orderno like '%custom%' and TRUNC(order_date) between TRUNC(to_date(#{start_date},'YYYY-MM-DD')) and TRUNC(to_date(#{end_date},'YYYY-MM-DD'))
	
	</select>

</mapper>